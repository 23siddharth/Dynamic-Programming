class Solution {
public:
    int orangesRotting(vector<vector<int>>& g) {
        int ans=0;
        int n=g.size();
        int m=g[0].size();
        if(n==0 || m==0) return -1;
        vector<pair<int,int>> ind;
        int cnt=0;
        for(int i=0;i<n;i++)
        {
             for(int j=0;j<m;j++)
             {
                 if(g[i][j]==2)
                 {
                    ind.push_back(make_pair(i,j));
                 }else if(g[i][j]==1)cnt++;
             }
        }
        //  if(ind.size()==0) return -1;
        vector<vector<int>> dis={{0,1},{1,0},{-1,0},{0,-1}};
        
        while(cnt>0)
        {
            vector<pair<int,int>> tmpind;
            for(auto i:ind)
            {
                 int x=i.first;
                 int y=i.second;
                 for(auto d:dis)
                 {
                     int dx=x+d[0];
                     int dy=y+d[1];
                     cout<<dx<<" "<<dy<<"..."<<endl;
                    //  cout<<g[1][0]<<endl;
                     if(dx>=0 && dy>=0 && dx<n && dy<m && g[dx][dy]==1)
                     {
                          g[dx][dy]=2;
                          tmpind.push_back(make_pair(dx,dy));
                          cout<<dx<<" "<<dy<<endl;
                          cnt--;
                     }
                 }
            }
            ind=tmpind;
           
            ans++;
             if(ind.size()==0) break;
        }
        
        return cnt>0?-1:ans;
    }
};
