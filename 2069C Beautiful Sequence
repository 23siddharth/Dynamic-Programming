#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define vt vector<ll>
#define pb push_back
#define ff first
#define ss second
#define ii pair<int, int>
#define vi vector<int>
#define vii vector<ii>
#define pll pair<ll,ll>
#define vpl vector<pair<ll,ll>>
#define cno cout<<"NO"<<endl
#define cyes cout<<"YES"<<endl
#define ct(t) cout<<t<<endl
#define forn for(ll i=0;i<n;++i)
#define forx(i,x) for(ll i=0;i<x;++i)
#define fory(i,x,y) for(ll i=x;i<=y;++i)
#define all(v) v.begin(),v.end()
#define rall(v) v.rbegin(),v.rend()
#define inp(a,n) for(ll i=0;i<n;++i) cin>>a[i];
#define out(a,n) for(ll i=0;i<n;++i) {cout<<a[i]<<" ";} cout<<endl;
#define INF 1000000000
#define M 998244353

const int N=2*100002;
// ll fact[N];

ll power(ll a, ll b)
{
    ll ans=1;
    while(b)
    {
        if(b&1)
            ans= (ans*a) ;
        a = (a*a);
        b >>= 1;
    }
    cout<<"USED"<<endl;
    return ans;
}

ll binexp(ll a, ll b, ll m)
{
    ll ans=1;
    while(b>0)
    {
        if(b&1)
            ans=(ans*a)%m;
        a=(a*a)%m;
        b>>=1;
    }
    return ans;
}

// ll ncr(ll n, ll r)
// {
//     //uncomment fact
//     if(fact[0]==0)
//     {
//         fact[0]=1;
//         for(int i=1;i<N;i++)
//             fact[i] = (fact[i-1] * 1ll * i) % M;
//     }

//     ll ans=fact[n];
//     ll den=(fact[r] * 1ll * fact[n-r])%M;
//     ans=(ans * 1ll * binexp(den, M-2, M))%M;
//     // ct(ans);
//     return ans;
// }



/*
    Thinking Space



    
*/

/*
    1 Based Indexing and array mismatch?
    cin ?
    Comment the helping code
*/

vt a(N);
ll n;
vector<vt>dp(N, vt(4, -1));
ll rec(ll i, ll x)
{

    //basecase
    if(x==4)
        return 1;
    if(i>=n)
        return 0;
    if(dp[i][x]!=(-1))
        return dp[i][x];
    ll a1=0, b=0;
    if(x==2)
    {
        if(a[i]==x)
        {
            a1=2*rec(i+1, x);
            b=rec(i+1, x+1);
        }
        else
            a1=rec(i+1, x);
    }
    else
    {
        a1=rec(i+1, x);
        if(a[i]==x)
            b=rec(i+1, x+1);
    }
    return dp[i][x]=(a1+b)%M;
}
void solve()
{
    cin >> n;
    // a.assign(n,0);
    dp.assign(n+1, vt(4,-1));
    forn
        cin >> a[i];
    ct(rec(0,1)%M);
    // ct(dp[0][0]);
}



int main()
{
    ios_base :: sync_with_stdio(0);
    cin. tie(0); cout.tie(0);
    
    ll tc=1;
    cin>>tc;

    while(tc--)
    {
        solve();
    }
}


